int analogPin1 = PA7;
int val = 0;
int volt = 0;

int analogPin2 = PA5;
int val2 = 0;
int volt2 = 0;

int lb1 = 0;

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

const unsigned char myBitboard [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

const unsigned char lowbattery [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xc0, 
0x3f, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xe0, 0x33, 0xff, 0xff, 0xe0, 0x33, 0xff, 0xff, 0xfc, 
0x33, 0xff, 0xff, 0xfc, 0x33, 0xff, 0xff, 0xfc, 0x33, 0xff, 0xff, 0xfc, 0x33, 0xff, 0xff, 0xfc, 
0x33, 0xff, 0xff, 0xfc, 0x33, 0xff, 0xff, 0xfc, 0x33, 0xff, 0xff, 0xfc, 0x33, 0xff, 0xff, 0xf0, 
0x33, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3D for 128x64
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
}

void showBitmap(void) {
  display.clearDisplay();
  display.drawBitmap(0, 0, myBitboard, 32, 32, WHITE);
  display.display();
  delay(1);
}

void showBattery(void) {
  display.clearDisplay();
  display.drawBitmap(0, 0, lowbattery, 32, 32, WHITE);
  display.display();
  delay(1);
}


void cleardisplay(){
  display.clearDisplay();
}

void voltMode(){
  val = analogRead(analogPin1);
  val2 = analogRead(analogPin2);
  float volt = val / 206.8; // this is calculated assuming you are using a voltage divider with a 50k and 10k resistor
  float volt2 = val2 / 206.8; // this is calculated assuming you are using a voltage divider with a 50k and 10k resistor
  Serial.println(volt);
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  display.println(volt);
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(0, 16);
  display.println(volt2);
}

void showlogo(){
  display.drawBitmap(80, 0, lowbattery, 32, 32, WHITE);
  display.display();
}


void loop() {
  cleardisplay();
  voltMode();
  showlogo();
}
